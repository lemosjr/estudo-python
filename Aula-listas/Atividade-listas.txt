==============================
Exercícios de Listas em Python
==============================

--------------------
1. Soma de Elementos
--------------------
Crie uma lista com 5 números inteiros de sua escolha.
Em seguida, escreva um programa que calcule e imprima a soma de todos os elementos dessa lista.
* Dica: Você pode usar um laço 'for' ou a função sum().

--------------------
2. Média da Turma
--------------------
Crie uma lista para armazenar as notas de 5 alunos (por exemplo: [7.5, 8.0, 6.5, 9.0, 7.0]). Calcule e imprima a média dessas notas.
* Dica: A média é a soma das notas dividida pelo número de alunos. Use len() para obter o número de alunos.

--------------------
3. Frutas em Ordem
--------------------
Crie uma lista com os nomes de cinco frutas.
a. Imprima a lista completa.
b. Adicione uma nova fruta ao final da lista.
c. Imprima a lista novamente, mas desta vez em ORDEM ALFABÉTICA.

--------------------
4. Removendo Duplicatas
--------------------
Dada a lista numeros = [1, 2, 3, 2, 4, 5, 5, 6]
crie um programa que gere uma nova lista contendo apenas os elementos únicos da lista original, sem repetições.
A ordem dos elementos na nova lista não importa.
* Dica: Considere usar um laço 'for' e verificar se o elemento já existe na nova lista antes de adicioná-lo.

--------------------
5. Separando Pares e Ímpares
--------------------
Crie uma lista com 10 números inteiros. Seu programa deve criar duas novas listas: uma contendo apenas os números PARES da lista original e outra contendo apenas os números ÍMPARES. Ao final, imprima as três listas.
* Dica: O operador '%' (módulo) é útil aqui. numero % 2 == 0 significa que o número é par.

--------------------
6. Lista de Compras Interativa
--------------------
Crie um programa que simule uma lista de compras. O programa deve permitir que o usuário:
a. Adicione um item à lista.
b. Remova um item da lista.
c. Visualize a lista completa.
O programa deve continuar rodando até que o usuário decida sair.
* Dica: Use um laço 'while True' e peça a entrada do usuário (input()) para decidir qual ação tomar.

--------------------
7. Invertendo Palavras
--------------------
Crie um programa que peça ao usuário para digitar uma frase. Em seguida, o programa deve criar uma lista onde cada elemento é uma palavra da frase, mas em ORDEM INVERSA. Por exemplo, se a entrada for "Eu amo programar em Python", a saída deve ser ['Python', 'em', 'programar', 'amo', 'Eu'].
* Dica: Use o método .split() para transformar a string em uma lista de palavras e, em seguida, use fatiamento ([::-1]) ou o método .reverse().

--------------------
8. Encontrando o Maior e o Menor Valor
--------------------
Crie uma lista de números e escreva um programa que encontre e imprima o MAIOR e o MENOR número da lista, sem usar as funções max() e min().
* Dica: Inicialize duas variáveis, 'maior' e 'menor', com o primeiro elemento da lista. Depois, percorra o restante da lista com um laço 'for', atualizando os valores de 'maior' e 'menor' conforme necessário.

--------------------
9. Quadrados com List Comprehension
--------------------
Usando LIST COMPREHENSION, crie uma lista chamada 'quadrados' que contenha o quadrado dos números de 1 a 10. Imprima a lista resultante.
* Exemplo de List Comprehension: nova_lista = [expressao for item in iteravel]

--------------------
10. Filtrando Nomes
--------------------
Dada a lista de nomes nomes = ["Ana", "Carlos", "Beatriz", "Daniel", "Amanda"], crie uma nova lista contendo apenas os nomes que começam com a letra 'A'. Use LIST COMPREHENSION para fazer isso.
* Dica: Strings em Python podem ser tratadas como listas de caracteres. nome[0] lhe dará a primeira letra.