#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
AULA COMPLETA SOBRE CONDICIONAIS EM PYTHON

Este arquivo serve como uma aula e um script execut√°vel.
Leia os coment√°rios para entender os conceitos e veja o c√≥digo em a√ß√£o.

Para executar, salve como um arquivo .py e rode no terminal:
python nome_do_arquivo.py
"""

# =============================================================================
# O B√ÅSICO: IF, ELIF E ELSE
# =============================================================================
# As estruturas condicionais permitem que o c√≥digo tome decis√µes.
# Elas executam a√ß√µes diferentes com base em se uma condi√ß√£o √© verdadeira ou falsa.

print("--- Se√ß√£o: O B√°sico: if, elif e else ---")

# --- 1. A Declara√ß√£o `if` ---
# A declara√ß√£o `if` testa uma condi√ß√£o. Se for True (verdadeira),
# o bloco de c√≥digo indentado abaixo dela √© executado.

print("\n[Exemplo 1: Usando if]")
idade = 20
print(f"Testando com idade = {idade}")

if idade >= 18:
    print("‚úÖ Acesso permitido! Voc√™ √© maior de idade.")

# Se a idade fosse 15, nada seria impresso nesta parte.


# --- 2. A Declara√ß√£o `else` ---
# O `else` executa um bloco de c√≥digo quando a condi√ß√£o do `if` √© False (falsa).
# Ele funciona como um "caso contr√°rio".

print("\n[Exemplo 2: Usando if-else]")
idade = 15
print(f"Testando com idade = {idade}")

if idade >= 18:
    print("‚úÖ Acesso permitido! Voc√™ √© maior de idade.")
else:
    print("üö´ Acesso negado! Voc√™ √© menor de idade.")


# --- 3. A Declara√ß√£o `elif` ---
# O `elif` (else if) permite verificar m√∫ltiplas condi√ß√µes em sequ√™ncia.
# O Python executa o bloco da primeira condi√ß√£o verdadeira que encontrar e ignora o resto.

print("\n[Exemplo 3: Usando if-elif-else]")
idade = 14
print(f"Testando com idade = {idade} para classifica√ß√£o de filmes.")

if idade >= 18:
    print("Voc√™ pode assistir a qualquer filme.")
elif idade >= 16:
    print("Voc√™ pode assistir a filmes de classifica√ß√£o at√© 16 anos.")
elif idade >= 12:
    print("Voc√™ pode assistir a filmes com classifica√ß√£o at√© 12 anos.")
else:
    print("Voc√™ s√≥ pode assistir a filmes com classifica√ß√£o livre.")


# =============================================================================
# CONDICIONAIS E OPERADORES L√ìGICOS (and, or, not)
# =============================================================================
# Para criar condi√ß√µes mais complexas.
# and: Verdadeiro somente se AMBAS as condi√ß√µes forem verdadeiras.
# or:  Verdadeiro se PELO MENOS UMA das condi√ß√µes for verdadeira.
# not: Inverte o resultado da condi√ß√£o (True vira False, False vira True).

print("\n\n--- Se√ß√£o: Operadores L√≥gicos ---")

# --- 4. Usando o operador `and` ---
print("\n[Exemplo 4: Usando 'and' para login]")
usuario_correto = "admin"
senha_correta = "12345"
usuario_digitado = "admin"
senha_digitada = "12345"
print(f"Tentativa de login com usu√°rio '{usuario_digitado}' e senha '{senha_digitada}'.")

if usuario_digitado == usuario_correto and senha_digitada == senha_correta:
    print("‚úÖ Login bem-sucedido!")
else:
    print("üö´ Usu√°rio ou senha incorretos.")

# --- 5. Usando o operador `or` ---
print("\n[Exemplo 5: Usando 'or' para verificar fim de semana]")
dia_semana = "S√°bado"
print(f"Verificando se '{dia_semana}' √© fim de semana.")

if dia_semana == "S√°bado" or dia_semana == "Domingo":
    print("üéâ √â fim de semana!")
else:
    print("√â dia de semana.")


# =============================================================================
# T√ìPICOS AVAN√áADOS
# =============================================================================
print("\n\n--- Se√ß√£o: T√≥picos Avan√ßados ---")

# --- 6. Condicionais Aninhadas ---
# √â poss√≠vel colocar uma estrutura condicional dentro de outra.
# √ötil para verifica√ß√µes em m√∫ltiplos n√≠veis.

print("\n[Exemplo 6: Condicionais Aninhadas para descontos]")
eh_membro = True
valor_compra = 150
print(f"Cliente √© membro? {eh_membro}. Valor da compra: R${valor_compra}")

if eh_membro:
    print("Cliente √© membro. Verificando valor da compra...")
    if valor_compra > 100:
        print("üéâ Parab√©ns! Voc√™ ganhou um desconto especial de 15%.")
    else:
        print("Como membro, voc√™ ainda ganha 5% de desconto.")
else:
    print("Torne-se membro para aproveitar nossos descontos!")


# --- 7. Operador Tern√°rio (Express√£o Condicional) ---
# Uma forma compacta de escrever um if-else simples, geralmente para atribui√ß√£o de valores.
# Sintaxe: valor_se_verdadeiro if condicao else valor_se_falso

print("\n[Exemplo 7: Operador Tern√°rio]")
idade = 20
print(f"Usando operador tern√°rio para a idade = {idade}")

status = "Maior de idade" if idade >= 18 else "Menor de idade"
print(f"Status: {status}")


# --- 8. Verdadeiro ou Falso Impl√≠cito (Truthiness) ---
# Em Python, v√°rios valores s√£o avaliados como False:
# - N√∫meros zero (0, 0.0)
# - Cole√ß√µes vazias ([], (), {}, "")
# - O objeto None
# Quase todo o resto √© avaliado como True.

print("\n[Exemplo 8: Truthiness para verificar listas]")

lista_de_compras_cheia = ["Ma√ß√£", "Banana", "Leite"]
lista_de_compras_vazia = []

# Testando com a lista cheia
print(f"\nTestando com a lista: {lista_de_compras_cheia}")
if lista_de_compras_cheia: # Em vez de `if len(lista_de_compras_cheia) > 0:`
    print("Sua lista de compras n√£o est√° vazia.")
else:
    print("Sua lista de compras est√° vazia.")

# Testando com a lista vazia
print(f"\nTestando com a lista: {lista_de_compras_vazia}")
if lista_de_compras_vazia:
    print("Sua lista de compras n√£o est√° vazia.")
else:
    print("Sua lista de compras est√° vazia.")


print("\n\nFim da aula sobre condicionais!")